[ ca ]

unique_subject = no
default_ca = CA_default

[ CA_default ] 
# where things are
dir = ./intermediate
certs = $dir/certs
crl_dir = $dir/crl
new_certs_dir = $dir/newcerts
database = $dir/index.txt
serial = $dir/serial
RANDFILE = $dir/private/.rand
rand_serial = yes
email_in_dn = no

# root key and cert
private_key = $dir/private/inter_key.pem
certificate = $dir/certs/inter_cert.pem

# not gonna use crl

# using updated sha256
default_md = sha256

name_opt = ca_default
cert_opt = ca_default
default_days = 365
preserve = no
policy = policy_loose

[ policy_strict ]
# make sure ca is only signing certs that match
countryName = match
stateOrProvinceName = match
organizationName = match
organizationalUnitName = optional
commonName = supplied
emailAddress = optional

[ policy_loose ] 
# intermediate ca can sign more certs
countryName = optional
stateOrProvinceName = optional
localityName = optional
organizationName = optional
organizationalUnitName = optional
commonName = supplied
emailAddress = optional

[ req ]
# options for req cmd
default_bits = 2048
distinguished_name = req_distinguished_name
string_mask = utf8only

# better sha again
default_md = sha256

# extensions for -x509
x509_extensions = v3_ca

[ req_distinguished_name ] 
# info needed for cert signing requests
countryName = Country Name (2 letter code)
stateOrProvinceName = State or Province Name
localityName = Locality Name
organizationName = Organization Name
organizationalUnitName = Organizational Unit Name
commonName = Common Name
emailAddress = Email Address

# defaults specified
countryName_default = US
stateOrProvinceName_default = CA
organizationName_default = Elysia Inc

[ v3_ca ]
# extensions for typical ca
subjectKeyIdentifier = hash
authorityKeyIdentifier = keyid:always,issuer
basicConstraints = critical, CA:true
keyUsage = critical, digitalSignature, keyCertSign

[ v3_ca_intermediate ]
# extensions for typical intermediate ca
subjectKeyIdentifier = hash
authorityKeyIdentifier = keyid:always,issuer
basicConstraints = critical, CA:true, pathlen:0
keyUsage = critical, digitalSignature, keyCertSign

[ usr_cert ] 
# extensions for client certs
basicConstraints = CA:FALSE
nsCertType = client, email
nsComment = "OpenSSL Generated Client Certificate"
subjectKeyIdentifier = hash
authorityKeyIdentifier = keyid,issuer
keyUsage = critical, nonRepudiation, digitalSignature, keyEncipherment
extendedKeyUsage = clientAuth, emailProtection

[ server_cert ]
# extensions for server certs
basicConstraints = CA:FALSE
nsCertType = server
nsComment = "OpenSSL Generated Server Certificate"
subjectKeyIdentifier = hash
authorityKeyIdentifier = keyid,issuer:always
keyUsage = critical, digitalSignature, keyEncipherment
extendedKeyUsage = serverAuth
